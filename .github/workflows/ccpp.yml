name: C/C++ CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  setup-deps:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
    - name: Generate cache key
      id: cache-key
      run: echo "value=${{ runner.os }}-apt-$(date -u +%Y%m)" >> $GITHUB_OUTPUT
    - name: Cache apt packages
      uses: actions/cache@v2
      with:
        path: /var/cache/apt/archives
        key: ${{ steps.cache-key.outputs.value }}
    - name: Install all dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ccache texlive-latex-base texlive-latex-recommended texlive-latex-extra
        echo "/usr/lib/ccache" >> $GITHUB_PATH

  pdf:
    needs: setup-deps
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Cache apt packages
      uses: actions/cache@v2
      with:
        path: /var/cache/apt/archives
        key: ${{ needs.setup-deps.outputs.cache-key }}
    - name: Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-latex-recommended texlive-latex-extra
    - name: Build PDF
      run: make kactl

  style:
    needs: setup-deps
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2
    - name: Check style
      run: make test-style

  test-problems:
    needs: setup-deps
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Cache apt packages
      uses: actions/cache@v2
      with:
        path: /var/cache/apt/archives
        key: ${{ needs.setup-deps.outputs.cache-key }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ccache
        echo "/usr/lib/ccache" >> $GITHUB_PATH
    - name: Check test problems
      run: make test-test-problems

  compiles:
    needs: setup-deps
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Cache apt packages
      uses: actions/cache@v2
      with:
        path: /var/cache/apt/archives
        key: ${{ needs.setup-deps.outputs.cache-key }}
    - name: Cache compilation
      uses: actions/cache@v2
      with:
        path: |
          ~/.ccache
          content/**/*.gch
        key: ${{ runner.os }}-compilation-${{ hashFiles('content/**/*.cpp', 'content/**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-compilation-
    - name: Install ccache
      run: |
        sudo apt-get update
        sudo apt-get install -y ccache
        echo "/usr/lib/ccache" >> $GITHUB_PATH
    - name: Configure ccache
      run: |
        ccache --max-size=2G
        ccache --set-config=compression=true
        ccache -p
    - name: Run compilation tests
      env:
        CCACHE_COMPRESS: "true"
        CCACHE_MAXSIZE: "2G"
        CCACHE_DIR: ~/.ccache
      run: make test-compiles

  stress-tests:
    needs: setup-deps
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        test-group: [data-structures, geometry, graph, number-theory, numerical, strings, various]
    steps:
    - uses: actions/checkout@v2
    - name: Cache apt packages
      uses: actions/cache@v2
      with:
        path: /var/cache/apt/archives
        key: ${{ needs.setup-deps.outputs.cache-key }}
    - name: Cache stress test artifacts
      uses: actions/cache@v2
      with:
        path: |
          ~/.ccache
          stress-tests/**/*.gch
          content/contest/template.cpp.gch
        key: ${{ runner.os }}-stress-${{ matrix.test-group }}-${{ hashFiles('stress-tests/**/*.cpp', 'stress-tests/**/*.h', 'content/**/*.h') }}
        restore-keys: |
          ${{ runner.os }}-stress-${{ matrix.test-group }}-
          ${{ runner.os }}-stress-
    - name: Install ccache
      run: |
        sudo apt-get update
        sudo apt-get install -y ccache
        echo "/usr/lib/ccache" >> $GITHUB_PATH
    - name: Configure ccache
      run: |
        ccache --max-size=2G
        ccache --set-config=compression=true
        ccache -p
    - name: Run stress tests (${{ matrix.test-group }})
      env:
        CCACHE_COMPRESS: "true"
        CCACHE_MAXSIZE: "2G"
        CCACHE_DIR: ~/.ccache
      run: make test-group-${{ matrix.test-group }}
